<?php

/**
 * @file
 * Contains custom_recurly.module functionality.
 */
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_form_alter().
 */
function custom_recurly_form_alter(array &$form, FormStateInterface $form_state, $form_id) {
  if ($form_id == 'recurly_subscription_plans_form') {
    $form['#submit'][] = '_save_subscription_plan';
  } elseif ($form_id == 'recurlyjs_subscribe') {
    $url = \Drupal\Core\Url::fromRoute('contact.site_page');
    $form_state->setRedirectUrl($url);
  }
}

/*
 * Save all subscription plan to our database
 */
function _save_subscription_plan(array &$form, FormStateInterface $form_state) {
  $all_plans = recurly_subscription_plans();
  $data = serialize($all_plans);

  $getSetting = \Drupal::database()->select('recurly_settings', 'rs');
  $getSetting->addField('rs', 'data');
  $getSetting->condition('name', 'recurly_subscription_plans');
  $settingData = $getSetting->execute()->fetchField();
  if (!empty($settingData)) {
    $result = \Drupal::database()->update('recurly_settings')
      ->fields(array(
        'data' => $data,
      ))
      ->condition("name", "recurly_subscription_plans")
      ->execute();
  } else {
    $result = \Drupal::database()->insert('recurly_settings') // Table name no longer needs {}
      ->fields(array(
        'name' => "recurly_subscription_plans",
        'data' => $data,
      ))
      ->execute();
  }

}

/**
 * Implements hook_theme().
 */
function custom_recurly_theme() {
  $items['custom_recurly_subscription_plan_select'] = [
    'variables' => [
      'plans' => NULL,
      'entity_type' => NULL,
      'entity' => NULL,
      'currency' => NULL,
      'mode' => 'signup',
      'subscriptions' => NULL,
      'subscription_id' => NULL,
    ],
    'template' => 'custom-recurly-subscription-plan-select',
    // The $mode of "change" or "signup" may be appended to the template name.
    'pattern' => 'custom-recurly-subscription-plan-select__',
  ];
  return $items;
}

/*
 * Get all subscription Plans
 */
function _get_all_subscription_plans() {
  $plan = \Drupal::database()->select('recurly_settings')
    ->fields('recurly_settings')
    ->condition("name", "recurly_subscription_plans")
    ->execute()
    ->fetchAssoc();
  return !empty($plan['data']) ? unserialize($plan['data']) : [];
}

/**
 * Implements hook_preprocess_recurly_subscription_plan_select().
 *
 * Shared preprocess function for the presentation of the signup & change page.
 */
function template_preprocess_custom_recurly_subscription_plan_select(&$variables) {
  \Drupal::service('recurly.recurly_preprocess')->preprocessRecurlySubscriptionPlanSelect($variables);
}